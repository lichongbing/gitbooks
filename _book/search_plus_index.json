{"./":{"url":"./","title":"简介","keywords":"","body":"Java 开发笔记 "},"java.html":{"url":"java.html","title":"Java基础知识思维导图","keywords":"","body":"泛型类定义类型\\n * 方法：add、remove、indexof\\n * 数据类型的封箱和拆箱\\n * 因为我们的ArrayList里面数据类型只能承装引用类型：比如要承装int类型，就需要进行转换为Integer类\\n * 自动封箱int直接转换为Integer\\n * 自动拆箱Integer拆箱为int\\n * 11 字符串String\\n * 特殊的引用类型，在java.lang包下面的，不需要进行导入，本身也是一个对象。\\n * 关于字符串的内存分析：String字符串内存是在常量池中不断发生变化的\\n * 字符串的操作：toCharArray、getBytes、indexOf、split、replace\\n * 12 Static关键字\\n * static关键字的使用\\n * 静态关键字static可以修饰成员变量和成员方法以及可以修饰代码块(静态代码块)\\n * 加载时间：静态关键字修复的额任何内容都是和类一起进行加载的（优先级和类加载评级）\\n * 静态关键字修饰的成员变量和方法都可以直接通过：类名.静态变量 类名.静态方法\\n * 静态关键字是属于类的，他不属于某一个对象，但是一旦发生变化，全部都会发生变化\\n * 注意事项\\n * 静态方法不能直接访问普通成员变量或成员方法，只能访问静态所修饰的变量和方法\\n * 反之，普通的成员方法(未被static修饰的方法)可以直接访问类变量或静态方法\\n * 静态方法中，不能使用this关键字\\n * 13 Java的数据类型\\n * java的基础数据类型\\n * 整型\\n * byte\\n * short\\n * int默认的整数类型\\n * long\\n * 浮点型\\n * float(3.14F)\\n * double（默认）\\n * 字符型\\n * char\\n * ASC码表\\n * '0'字符数值为48\\n * 'A'字符数值为65\\n * 'a'字符数值为97\\n * 布尔型\\n\\n\\n\\n\\n\\n```\\n\",\"args\":[],\"kwargs\":{},\"blocks\":[]}\" data-svg-text=\"\"* Java基础-入门篇知识点总结\\n * 数组\\n * 数组：一种容器\\n * 数组的创建\\n * int[] arr = new int[10]\\n * int[] arr = new int []{1,2,3,4,5}\\n * int[] arr = {1,2,3,4,5}\\n * 数组的访问\\n * 索引：从下标0开始的，数组的总长度：数组.length（）\\n * 内存分析\\n * 寄存器\\n * 本地方法栈\\n * 方法区:存放.class文件\\n * 堆内存：java里面所有使用new关键字创建的对象都是存放在堆内存中\\n * 栈：声明的变量都市在栈上去声明的\\n * 关于值传递与引用传递\\n * 值传递：基础数据类型都是值传递\\n * 引用数据类型：都是地址传递 如数组arr\\n * 面向对象的思想\\n * 万事万物皆对象\\n * 面向对象(类和实例的关系) \\n * 类是抽象的，对象是具体的；类相当于一个模板，对象是通过类进行创建的，并且类和对象之间为1对多的关系\\n \\n * 类的详细使用\\n * 成员变量\\n * 成员方法\\n * 构造器\\n * java中默认为每一个类提供默认的无参数的构造器\\n * 也可以定义很多有参数的构造器（方法的重载）\\n * 一个标准的javabean封装\\n * 1 要对成员变量添加private修饰符，表示私有的，其他的外部无法之间访问\\n * 2 必须要自己是想getXXX和setXXX来进行访问看，安全性\\n * 3 java里面默认会为每一个类提供无参的构造器，也可以自己定义有参的构造器\\n * 4 this关键字的作用；永远指代当前的对象(当前实例化的对象)\\n * 10 API的使用\\n * API:应用程序提供访问的接口\\n * 包package：合理划分我们的代码，使我们的代码结构更加清晰\\n * Scanner 扫描类\\n * Random随机类\\n * ArrayList容器类\\n * 基于数组去实现的，并且长度不做限制，ArrayList也只能承装一类数据类型(只能是引用类型)，使用泛型类定义类型\\n * 方法：add、remove、indexof\\n * 数据类型的封箱和拆箱\\n * 因为我们的ArrayList里面数据类型只能承装引用类型：比如要承装int类型，就需要进行转换为Integer类\\n * 自动封箱int直接转换为Integer\\n * 自动拆箱Integer拆箱为int\\n * 11 字符串String\\n * 特殊的引用类型，在java.lang包下面的，不需要进行导入，本身也是一个对象。\\n * 关于字符串的内存分析：String字符串内存是在常量池中不断发生变化的\\n * 字符串的操作：toCharArray、getBytes、indexOf、split、replace\\n * 12 Static关键字\\n * static关键字的使用\\n * 静态关键字static可以修饰成员变量和成员方法以及可以修饰代码块(静态代码块)\\n * 加载时间：静态关键字修复的额任何内容都是和类一起进行加载的（优先级和类加载评级）\\n * 静态关键字修饰的成员变量和方法都可以直接通过：类名.静态变量 类名.静态方法\\n * 静态关键字是属于类的，他不属于某一个对象，但是一旦发生变化，全部都会发生变化\\n * 注意事项\\n * 静态方法不能直接访问普通成员变量或成员方法，只能访问静态所修饰的变量和方法\\n * 反之，普通的成员方法(未被static修饰的方法)可以直接访问类变量或静态方法\\n * 静态方法中，不能使用this关键字\\n * 13 Java的数据类型\\n * java的基础数据类型\\n * 整型\\n * byte\\n * short\\n * int默认的整数类型\\n * long\\n * 浮点型\\n * float(3.14F)\\n * double（默认）\\n * 字符型\\n * char\\n * ASC码表\\n * '0'字符数值为48\\n * 'A'字符数值为65\\n * 'a'字符数值为97\\n * 布尔型\\n\\n\\n\\n\\n\\n\"\"> "}}